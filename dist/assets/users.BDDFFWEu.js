import{r as P,e as _,h as U,i as j,j as F,t as a,k as O,a as m,b as S,s as c,f as q,n as b}from"./auth.CqiyQgTP.js";/* empty css              */import{i as H}from"./dashboardShell.DoHAApXs.js";P({ar:{"users.nav.brand":"🛡️ إدارة المستخدمين","users.actions.refresh":"🔄 تحديث القائمة","users.form.title":"➕ إضافة أو تعديل مستخدم","users.form.subtitle":"يمكنك إضافة مستخدم جديد، تعديل بياناته، أو إعادة تعيين كلمة المرور.","users.form.adminOnly":"متاح للمسؤولين فقط","users.form.fields.username":"👤 اسم المستخدم","users.form.fields.password":"🔑 كلمة المرور","users.form.fields.role":"🎯 الصلاحية","users.form.placeholders.username":"مثال: admin","users.form.placeholders.password":"كلمة المرور الجديدة (اختياري للتعديل)","users.form.help.password":"متطلبات كلمة المرور: 8 أحرف على الأقل.","users.form.selectRole":"اختر الصلاحية","users.roles.admin":"مسؤول","users.roles.manager":"مدير","users.roles.technician":"فني","users.form.actions.cancel":"إلغاء","users.form.actions.submit":"💾 حفظ المستخدم","users.form.actions.update":"💾 تحديث المستخدم","users.actions.edit":"✏️ تعديل","users.actions.logs":"📜 السجلات","users.actions.delete":"🗑️ حذف","users.table.title":"👥 قائمة المستخدمين","users.table.subtitle":"استعرض جميع المستخدمين، مع إمكانية التعديل أو حذف الحسابات، والاطلاع على السجلات.","users.table.search":"ابحث بالاسم أو الصلاحية","users.table.headers.username":"👤 اسم المستخدم","users.table.headers.role":"🎯 الصلاحية","users.table.headers.lastLogin":"آخر تسجيل دخول","users.table.headers.createdAt":"تاريخ الإنشاء","users.table.headers.sessions":"سجلات الجلسات","users.table.headers.activity":"سجلات النشاط","users.table.headers.actions":"⚙️ الإجراءات","users.table.loading":"⏳ جارٍ تحميل المستخدمين...","users.table.empty":"لا توجد حسابات حالياً.","users.table.emptyFilter":"لا توجد نتائج مطابقة لخيارات البحث.","users.table.selfBadge":"🧑‍💻 أنت","users.logs.title":"📜 سجلات المستخدم","users.logs.sessionsTitle":"🕒 سجلات الجلسات","users.logs.activityTitle":"📘 سجلات النشاط","users.logs.loading":"جارٍ تحميل السجلات...","users.logs.headers.login":"تسجيل الدخول","users.logs.headers.logout":"تسجيل الخروج","users.logs.headers.ip":"عنوان IP","users.logs.headers.timestamp":"التاريخ","users.logs.headers.action":"الإجراء","users.logs.headers.details":"تفاصيل","users.logs.emptySessions":"لا توجد سجلات جلسات متاحة.","users.logs.emptyActivity":"لا توجد سجلات نشاط متاحة.","users.logs.actions.loginSuccess":"تم تسجيل الدخول بنجاح","users.logs.actions.logout":"تم تسجيل الخروج","users.logs.actions.preferencesUpdate":"تم تحديث التفضيلات","users.logs.actions.authorizationDenied":"تم رفض التفويض بسبب الصلاحيات","users.logs.actions.reservationCreate":"تم إنشاء حجز","users.logs.actions.reservationUpdate":"تم تحديث الحجز","users.logs.actions.reservationDelete":"تم حذف الحجز","users.logs.actions.reservationConfirm":"تم تأكيد الحجز","users.logs.actions.maintenanceCreate":"تم إنشاء تذكرة صيانة","users.logs.actions.maintenanceUpdate":"تم تحديث تذكرة الصيانة","users.logs.actions.maintenanceClose":"تم إغلاق تذكرة الصيانة","users.logs.actions.projectCreate":"تم إنشاء مشروع","users.logs.actions.projectUpdate":"تم تحديث المشروع","users.logs.actions.projectDelete":"تم حذف المشروع","users.logs.actions.unknown":"نشاط عام","users.logs.details.empty":"لا توجد بيانات","users.logs.actions.close":"إغلاق","users.messages.created":"✅ تم إنشاء المستخدم بنجاح.","users.messages.updated":"✅ تم تحديث بيانات المستخدم.","users.messages.deleted":"🗑️ تم حذف المستخدم.","users.messages.loadFailed":"تعذر تحميل قائمة المستخدمين. حاول مرة أخرى.","users.messages.logsFailed":"تعذر تحميل سجلات المستخدم المحدد.","users.messages.deleteConfirm":"هل أنت متأكد من حذف هذا المستخدم؟ لا يمكن التراجع.","users.messages.deleteBlockedSelf":"لا يمكنك حذف الحساب الذي تستخدمه حالياً.","users.messages.saveBlocked":"يرجى تحديد حساب لتعديله أو إدخال البيانات المطلوبة.","users.messages.validation.passwordRequired":"يجب إدخال كلمة مرور عند إنشاء مستخدم جديد.","users.messages.validation.roleRequired":"يرجى تحديد صلاحية للمستخدم.","users.messages.notAdmin":"هذه الصفحة متاحة للمسؤولين فقط.","users.messages.createdAt":"أنشئ في {date}","users.messages.lastLogin":"آخر دخول في {date}","users.badges.currentUser":"🧑‍💻 الحساب الحالي","users.badges.role.admin":"مسؤول","users.badges.role.manager":"مدير","users.badges.role.technician":"فني"},en:{"users.nav.brand":"🛡️ User Management","users.actions.refresh":"🔄 Refresh List","users.form.title":"➕ Add or Update User","users.form.subtitle":"Create a new user, adjust their permissions, or reset the password.","users.form.adminOnly":"Admins only","users.form.fields.username":"👤 Username","users.form.fields.password":"🔑 Password","users.form.fields.role":"🎯 Role","users.form.placeholders.username":"e.g. admin","users.form.placeholders.password":"New password (optional when editing)","users.form.help.password":"Password must be at least 8 characters long.","users.form.selectRole":"Select a role","users.roles.admin":"Admin","users.roles.manager":"Manager","users.roles.technician":"Technician","users.form.actions.cancel":"Cancel","users.form.actions.submit":"💾 Save User","users.form.actions.update":"💾 Update User","users.actions.edit":"✏️ Edit","users.actions.logs":"📜 Logs","users.actions.delete":"🗑️ Delete","users.table.title":"👥 Users List","users.table.subtitle":"Review all accounts, edit or delete them, and inspect audit logs.","users.table.search":"Search by username or role","users.table.headers.username":"👤 Username","users.table.headers.role":"🎯 Role","users.table.headers.lastLogin":"Last Login","users.table.headers.createdAt":"Created At","users.table.headers.sessions":"Sessions","users.table.headers.activity":"Activity","users.table.headers.actions":"⚙️ Actions","users.table.loading":"⏳ Loading users...","users.table.empty":"No accounts found yet.","users.table.emptyFilter":"No results match your filters.","users.table.selfBadge":"🧑‍💻 You","users.logs.title":"📜 User Logs","users.logs.sessionsTitle":"🕒 Session Logs","users.logs.activityTitle":"📘 Activity Logs","users.logs.loading":"Loading logs...","users.logs.headers.login":"Login","users.logs.headers.logout":"Logout","users.logs.headers.ip":"IP Address","users.logs.headers.timestamp":"Timestamp","users.logs.headers.action":"Action","users.logs.headers.details":"Details","users.logs.emptySessions":"No session history available.","users.logs.emptyActivity":"No activity history available.","users.logs.actions.loginSuccess":"Successful login","users.logs.actions.logout":"User signed out","users.logs.actions.preferencesUpdate":"Preferences updated","users.logs.actions.authorizationDenied":"Authorisation denied","users.logs.actions.reservationCreate":"Reservation created","users.logs.actions.reservationUpdate":"Reservation updated","users.logs.actions.reservationDelete":"Reservation deleted","users.logs.actions.reservationConfirm":"Reservation confirmed","users.logs.actions.maintenanceCreate":"Maintenance ticket created","users.logs.actions.maintenanceUpdate":"Maintenance ticket updated","users.logs.actions.maintenanceClose":"Maintenance ticket closed","users.logs.actions.projectCreate":"Project created","users.logs.actions.projectUpdate":"Project updated","users.logs.actions.projectDelete":"Project deleted","users.logs.actions.unknown":"General activity","users.logs.details.empty":"No data","users.logs.actions.close":"Close","users.messages.created":"✅ User created successfully.","users.messages.updated":"✅ User updated successfully.","users.messages.deleted":"🗑️ User removed.","users.messages.loadFailed":"Failed to load users. Please try again.","users.messages.logsFailed":"Could not load logs for that user.","users.messages.deleteConfirm":"Are you sure you want to delete this user? This cannot be undone.","users.messages.deleteBlockedSelf":"You cannot delete the account you are currently using.","users.messages.saveBlocked":"Select an account to edit or provide the required information.","users.messages.validation.passwordRequired":"Password is required when creating a new user.","users.messages.validation.roleRequired":"Please choose a role for the user.","users.messages.notAdmin":"This page is restricted to administrator accounts.","users.messages.createdAt":"Created at {date}","users.messages.lastLogin":"Last login at {date}","users.badges.currentUser":"🧑‍💻 Current account","users.badges.role.admin":"Admin","users.badges.role.manager":"Manager","users.badges.role.technician":"Technician"}});_();H();const l={users:[],filtered:[],loading:!1,processing:!1,editingId:null},z={LOGIN_SUCCESS:{key:"users.logs.actions.loginSuccess",fallback:"Successful login"},LOGOUT:{key:"users.logs.actions.logout",fallback:"User signed out"},PREFERENCES_UPDATE:{key:"users.logs.actions.preferencesUpdate",fallback:"Preferences updated"},AUTHORIZATION_DENIED:{key:"users.logs.actions.authorizationDenied",fallback:"Authorisation denied"},RESERVATION_CREATE:{key:"users.logs.actions.reservationCreate",fallback:"Reservation created"},RESERVATION_UPDATE:{key:"users.logs.actions.reservationUpdate",fallback:"Reservation updated"},RESERVATION_DELETE:{key:"users.logs.actions.reservationDelete",fallback:"Reservation deleted"},RESERVATION_CONFIRM:{key:"users.logs.actions.reservationConfirm",fallback:"Reservation confirmed"},MAINTENANCE_CREATE:{key:"users.logs.actions.maintenanceCreate",fallback:"Maintenance ticket created"},MAINTENANCE_UPDATE:{key:"users.logs.actions.maintenanceUpdate",fallback:"Maintenance ticket updated"},MAINTENANCE_CLOSE:{key:"users.logs.actions.maintenanceClose",fallback:"Maintenance ticket closed"},PROJECT_CREATE:{key:"users.logs.actions.projectCreate",fallback:"Project created"},PROJECT_UPDATE:{key:"users.logs.actions.projectUpdate",fallback:"Project updated"},PROJECT_DELETE:{key:"users.logs.actions.projectDelete",fallback:"Project deleted"}},V={true:{key:"common.boolean.yes",fallback:"Yes"},false:{key:"common.boolean.no",fallback:"No"}},K={errorAlert:"#users-error",refreshBtn:"#refresh-users-btn",logoutBtn:"#logout-btn",form:"#user-form",cancelBtn:"#user-cancel-btn",usernameInput:"#user-username",passwordInput:"#user-password",roleSelect:"#user-role",idInput:"#user-id",submitBtn:'#user-form button[type="submit"]',searchInput:"#users-search",tableBody:"#users-table tbody",sessionsBody:"#user-sessions-body",activityBody:"#user-activity-body",modal:"#userLogsModal",modalTitle:"#userLogsModalLabel"},s={};let v=null;function Y(){Object.entries(K).forEach(([e,t])=>{s[e]=document.querySelector(t)})}function n(e){return String(e??"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function G(e){return e.replace(/\w\S*/g,t=>t.charAt(0).toUpperCase()+t.slice(1).toLowerCase())}function T(e){if(!e)return"";const t=e.replace(/([a-z])([A-Z])/g,"$1 $2").replace(/[_\-]+/g," ").replace(/\s+/g," ").trim();return G(t||e)}function J(e){const t=String(e||"").trim().toUpperCase();if(!t)return a("users.logs.actions.unknown","General activity");const r=z[t];return r?a(r.key,r.fallback):T(t)}function R(e){const t=V[String(!!e)];return t?a(t.key,t.fallback):e?"Yes":"No"}function Z(e){if(!Array.isArray(e)||e.length===0)return`<span class="text-muted">${n(a("users.logs.details.empty","No data"))}</span>`;if(e.every(r=>r==null||["string","number","boolean"].includes(typeof r))){const r=e.map(o=>o==null?a("users.logs.details.empty","No data"):typeof o=="boolean"?R(o):typeof o=="number"?b(String(o)):String(o)).join("، ");return`<span class="users-logs-detail-text">${n(r)}</span>`}try{return`<pre class="users-logs-detail-code">${n(JSON.stringify(e,null,2))}</pre>`}catch{return`<span class="users-logs-detail-text">${n(String(e))}</span>`}}function A(e){if(e==null||e==="")return`<span class="text-muted">${n(a("users.logs.details.empty","No data"))}</span>`;if(typeof e=="boolean"){const t=R(e);return`<span class="${e?"users-logs-status users-logs-status--yes":"users-logs-status users-logs-status--no"}">${n(t)}</span>`}if(typeof e=="number")return`<span class="users-logs-detail-text">${n(b(String(e)))}</span>`;if(typeof e=="string")return`<span class="users-logs-detail-text">${n(e)}</span>`;if(Array.isArray(e))return Z(e);if(typeof e=="object"){const t=Object.entries(e);return t.length===0?`<span class="text-muted">${n(a("users.logs.details.empty","No data"))}</span>`:`<div class="users-logs-details users-logs-details--nested">${t.map(([o,i])=>{const u=T(o);return`
        <div class="users-logs-detail-row users-logs-detail-row--nested">
          <span class="users-logs-detail-key">${n(u)}</span>
          <span class="users-logs-detail-value">${A(i)}</span>
        </div>
      `}).join("")}</div>`}try{return`<span class="users-logs-detail-text">${n(String(e))}</span>`}catch{return`<span class="text-muted">${n(a("users.logs.details.empty","No data"))}</span>`}}function g(e){if(s.errorAlert){if(!e){s.errorAlert.classList.add("d-none"),s.errorAlert.textContent="";return}s.errorAlert.textContent=e,s.errorAlert.classList.remove("d-none")}}function I(e){l.loading=e,s.refreshBtn&&(s.refreshBtn.disabled=e),w()}function f(e){if(l.processing=e,!s.form)return;s.form.querySelectorAll("input, select, button").forEach(r=>{r.disabled=e&&r.type!=="search"})}function p(e){return e?q(e):"—"}function Q(e){const t=(e||"").toLowerCase(),r={admin:a("users.badges.role.admin","Admin"),manager:a("users.badges.role.manager","Manager"),technician:a("users.badges.role.technician","Technician")};return`<span class="${t==="admin"?"badge badge-outline badge-error":t==="manager"?"badge badge-outline badge-primary":"badge badge-outline"}">${n(r[t]||e||"")}</span>`}function W(){return`<span class="badge badge-outline badge-info">${n(a("users.badges.currentUser","🧑‍💻 Current account"))}</span>`}function X(e){const t=n(e.username||""),r=n(p(e.last_login)),o=n(p(e.created_at)),i=b(String(e.session_count??0)),u=b(String(e.activity_count??0)),d=e.is_current_user?"disabled":"",h=e.is_current_user?` <span class="ms-1">${W()}</span>`:"",M=n(a("users.actions.edit","✏️ Edit")),D=n(a("users.actions.logs","📜 Logs")),x=n(a("users.actions.delete","🗑️ Delete"));return`
    <tr data-user-id="${e.id}">
      <td class="font-semibold text-base-content">${t}${h}</td>
      <td>${Q(e.role)}</td>
      <td>${r}</td>
      <td>${o}</td>
      <td><span class="badge badge-outline badge-primary badge-sm">${i}</span></td>
      <td><span class="badge badge-outline badge-secondary badge-sm">${u}</span></td>
      <td>
        <div class="flex flex-wrap items-center gap-1.5" role="group">
          <button type="button" class="btn btn-ghost btn-sm" data-action="logs" data-id="${e.id}" title="${D}">📜</button>
          <button type="button" class="btn btn-outline btn-sm" data-action="edit" data-id="${e.id}" title="${M}">✏️</button>
          <button type="button" class="btn btn-outline btn-error btn-sm" data-action="delete" data-id="${e.id}" ${d} title="${x}">🗑️</button>
        </div>
      </td>
    </tr>
  `}function w(){if(s.tableBody){if(l.loading){s.tableBody.innerHTML=`
      <tr>
        <td colspan="7" class="text-center text-muted">${n(a("users.table.loading","⏳ Loading users..."))}</td>
      </tr>
    `;return}if(!Array.isArray(l.filtered)||l.filtered.length===0){const e=!!(s.searchInput&&s.searchInput.value.trim()),t=e?"users.table.emptyFilter":"users.table.empty";s.tableBody.innerHTML=`
      <tr>
        <td colspan="7" class="text-center text-muted">${n(a(t,e?"No results match your filters.":"No accounts found yet."))}</td>
      </tr>
    `;return}s.tableBody.innerHTML=l.filtered.map(X).join("")}}function L(){const e=(s.searchInput?.value||"").trim().toLowerCase();if(!e){l.filtered=[...l.users],w();return}l.filtered=l.users.filter(t=>{const r=(t.username||"").toLowerCase().includes(e),o=(t.role||"").toLowerCase().includes(e);return r||o}),w()}async function y(){if(!l.loading){g(""),I(!0);try{const e=await m("/users/"),t=Array.isArray(e?.data)?e.data:[];l.users=t.map(r=>({...r})),L()}catch(e){console.error("❌ Failed to load users",e);const t=e instanceof S?e.message:a("users.messages.loadFailed","Failed to load users. Please try again.");g(t),l.users=[],l.filtered=[]}finally{I(!1)}}}function B({editing:e,user:t}){const r=!!(e&&t);if(l.editingId=r?Number(t.id):null,!s.idInput||!s.usernameInput||!s.passwordInput||!s.roleSelect||!s.submitBtn||!s.cancelBtn)return;s.idInput.value=r?String(t.id):"",s.usernameInput.value=r?String(t.username||""):"",s.roleSelect.value=r?String(t.role||""):"",s.passwordInput.value="",s.passwordInput.required=!r;const o=r?"users.form.actions.update":"users.form.actions.submit";s.submitBtn.dataset.i18nKey=o,s.submitBtn.textContent=a(o,r?"Update user":"Save user"),r?(s.cancelBtn.classList.remove("d-none"),s.usernameInput.focus()):s.cancelBtn.classList.add("d-none")}function k(){s.form&&(s.form.reset(),B({editing:!1,user:null}))}function $(e){return l.users.find(t=>Number(t.id)===Number(e))}async function ee(e){if(e.preventDefault(),!s.usernameInput||!s.passwordInput||!s.roleSelect)return;const t=s.usernameInput.value.trim(),r=s.passwordInput.value,o=s.roleSelect.value.trim().toLowerCase();if(!t){c(a("users.messages.saveBlocked","Select an account to edit or provide the required information.")),s.usernameInput.focus();return}if(!o){c(a("users.messages.validation.roleRequired","Please choose a role for the user.")),s.roleSelect.focus();return}const i=Number.isFinite(l.editingId);if(!i&&r.trim()===""){c(a("users.messages.validation.passwordRequired","Password is required when creating a new user.")),s.passwordInput.focus();return}const u={username:t,role:o};r.trim()!==""&&(u.password=r),f(!0),g("");try{i?(await m(`/users/?id=${l.editingId}`,{method:"PATCH",body:u}),c(a("users.messages.updated","✅ User updated successfully."))):(await m("/users/",{method:"POST",body:u}),c(a("users.messages.created","✅ User created successfully."))),k(),await y()}catch(d){if(console.error("❌ Failed to save user",d),d instanceof S){const h=d.payload?.error||d.message;g(h)}else g(a("users.messages.loadFailed","Failed to load users. Please try again."))}finally{f(!1)}}function se(){k()}async function te(e){const t=$(e);if(!t)return;if(t.is_current_user){c(a("users.messages.deleteBlockedSelf","You cannot delete the account you are currently using."));return}if(window.confirm(a("users.messages.deleteConfirm","Are you sure you want to delete this user? This cannot be undone."))){f(!0);try{await m(`/users/?id=${e}`,{method:"DELETE"}),c(a("users.messages.deleted","🗑️ User removed.")),l.editingId===Number(e)&&k(),await y()}catch(o){console.error("❌ Failed to delete user",o),o instanceof S?g(o.payload?.error||o.message):g(a("users.messages.loadFailed","Failed to load users. Please try again."))}finally{f(!1)}}}function E(e){if(s.sessionsBody){if(!Array.isArray(e)||e.length===0){s.sessionsBody.innerHTML=`
      <tr>
        <td colspan="3" class="text-center text-muted">${n(a("users.logs.emptySessions","No session history available."))}</td>
      </tr>
    `;return}s.sessionsBody.innerHTML=e.map(t=>`
    <tr>
      <td>${n(p(t.login_time))}</td>
      <td>${n(p(t.logout_time))}</td>
      <td>${n(t.ip_address||"—")}</td>
    </tr>
  `).join("")}}function re(e){if(e&&typeof e=="object"&&!Array.isArray(e)){const t=Object.entries(e);return t.length?`<div class="users-logs-details">${t.map(([o,i])=>{const u=T(o);return`
        <div class="users-logs-detail-row">
          <span class="users-logs-detail-key">${n(u)}</span>
          <span class="users-logs-detail-value">${A(i)}</span>
        </div>
      `}).join("")}</div>`:`<span class="text-muted">${n(a("users.logs.details.empty","No data"))}</span>`}return A(e)}function C(e){if(s.activityBody){if(!Array.isArray(e)||e.length===0){s.activityBody.innerHTML=`
      <tr>
        <td colspan="3" class="text-center text-muted">${n(a("users.logs.emptyActivity","No activity history available."))}</td>
      </tr>
    `;return}s.activityBody.innerHTML=e.map(t=>`
    <tr>
      <td>${n(p(t.timestamp))}</td>
      <td>${n(J(t.action))}</td>
      <td>${re(t.details)}</td>
    </tr>
  `).join("")}}async function ae(e){const t=$(e);if(!t||!s.modal||!s.modalTitle)return;const r=s.modal;v=v||new window.bootstrap.Modal(r,{backdrop:"static"}),s.modalTitle.textContent=`${a("users.logs.title","User Logs")} — ${t.username}`;const o=n(a("users.logs.loading","Loading logs..."));s.sessionsBody&&(s.sessionsBody.innerHTML=`
      <tr>
        <td colspan="3" class="text-center text-muted">${o}</td>
      </tr>
    `),s.activityBody&&(s.activityBody.innerHTML=`
      <tr>
        <td colspan="3" class="text-center text-muted">${o}</td>
      </tr>
    `),v.show();try{const i=await m(`/users/?scope=logs&user_id=${e}&limit=50`),u=Array.isArray(i?.data?.sessions)?i.data.sessions:[],d=Array.isArray(i?.data?.activity)?i.data.activity:[];E(u),C(d)}catch(i){console.error("❌ Failed to load user logs",i),c(a("users.messages.logsFailed","Could not load logs for that user.")),E([]),C([])}}function oe(e){const t=e.target.closest("button[data-action]");if(!t)return;const r=t.dataset.action,o=Number(t.dataset.id);if(!(!Number.isFinite(o)||o<=0)){if(r==="edit"){const i=$(o);i&&B({editing:!0,user:i});return}if(r==="delete"){te(o).catch(i=>{console.error("❌ Delete handler failed",i)});return}r==="logs"&&ae(o).catch(i=>{console.error("❌ Logs handler failed",i)})}}function ne(){s.logoutBtn&&s.logoutBtn.addEventListener("click",()=>F()),s.refreshBtn&&s.refreshBtn.addEventListener("click",()=>{y().catch(e=>console.error("❌ Refresh failed",e))}),s.form&&s.form.addEventListener("submit",ee),s.cancelBtn&&s.cancelBtn.addEventListener("click",se),s.searchInput&&s.searchInput.addEventListener("input",()=>L()),s.tableBody&&s.tableBody.addEventListener("click",oe),s.modal&&s.modal.addEventListener("hidden.bs.modal",()=>{E([]),C([])}),document.addEventListener("language:changed",()=>{const e=l.editingId?"users.form.actions.update":"users.form.actions.submit";s.submitBtn&&(s.submitBtn.textContent=a(e,l.editingId?"Update user":"Save user")),L()})}async function ie(){try{const e=await O({refresh:!0});return e?(e.role||"").toLowerCase()!=="admin"?(g(a("users.messages.notAdmin","This page is restricted to administrator accounts.")),f(!0),s.form&&s.form.querySelectorAll("input, select, button").forEach(r=>{r.disabled=!0}),setTimeout(()=>{window.location.href="home.html"},2500),!1):!0:(window.location.href="login.html",!1)}catch(e){return console.error("❌ Failed to verify account role",e),window.location.href="login.html",!1}}async function N(){Y(),j(),ne(),await ie()&&(B({editing:!1,user:null}),await y())}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{U().finally(()=>{N().catch(e=>console.error("❌ Bootstrap failed",e))})},{once:!0}):U().finally(()=>{N().catch(e=>console.error("❌ Bootstrap failed",e))});
